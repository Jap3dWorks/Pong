#version 450
{{ defines }}

#include "core/bind_vertex_data.glsl"

uniform mat4 model;

#include "core/bind_camera.glsl"
#include "core/bind_frame_data.glsl"
#include "core/bind_render_data.glsl"

out VS_OUT {
    vec3 FragPos;
    vec3 Normal;
    vec2 TexCoords;
    vec3 WorldPos;
} vs_out;

out CAM_DT {
    mat3 view_matrix;
    float z_camera_ray;
} cam_dt;

void vertex_main();

{{ code }}

void main() {
    mat3 normalMatrix = transpose(inverse(mat3(model)));
    vs_out.Normal = normalize(normalMatrix * aNormal);

    vs_out.TexCoords=aTexCoords;
    vs_out.WorldPos = vec3(model * vec4(aPos, 1.f));

    vertex_main();

    vs_out.FragPos = vec3(gl_Position);
    }
